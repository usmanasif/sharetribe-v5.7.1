//////////////////////////////////////////////HOME.haml///////////////////////////////////////////////////
%header#header
  .header-top
    .container
      .row
        .col-md-12.col-sm-12.col-xs-12
          %nav.cart-area.admin-menu-panel
            %ul
              - if @current_user
                - conversations = @current_community.conversations.for_person(@current_user)
                - unread_count = MarketplaceService::Inbox::Query.notification_count(@current_user.id, @current_community.id)
                %li
                  = link_to person_inbox_path(@current_user) do
                    / = icon_tag"mail", ["icon-with-text"])
                    - if unread_count > 0
                      .mobile-badge{:class => get_badge_class(unread_count)}
                        = unread_count
                %li{:style => "margin-right: 262px;"}
                  .dropdown.login-admin-profile
                    %button#dropdownMenu1.btn.btn-default.login-btn.dropdown-toggle{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
                      %img.va_h_image{:alt => "", :src => "http://www.free-icons-download.net/images/user-icon-27998.png", :style => "width: 20px;height: 20px;"} 
                      %span.admin-text
                        = "Ali Ahmad Saleem"
                        /= @current_user.name(@current_community)
                        %i.icon-caret-down.icon-dropdown
                    %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1"}
                      - if @current_user
                        - Maybe(@current_user).each do |user|
                          - conversations = @current_community.conversations.for_person(user)
                          - unread_count = MarketplaceService::Inbox::Query.notification_count(user.id, @current_community.id)
                          %li
                            = link_to person_inbox_path(@current_user) do
                              / = icon_tag"mail", ["icon-with-text"])
                              = t("layouts.conversations.messages")
                              - if unread_count > 0
                                .mobile-badge{:class => get_badge_class(unread_count)}
                                = unread_count
                          %li
                            = link_to person_path(user) do
                              / = icon_tag"user", ["icon-with-text"])
                              = t("header.profile")                        
                          %li
                            = link_to person_settings_path(user) do
                              / = icon_tag"settings", ["icon-with-text"])
                              = t("layouts.logged_in.settings")
                          / %li
                          /   = link_to logout_path do
                          /     / = icon_tag"logout", ["icon-with-text"])
                          /     = t("layouts.logged_in.logout")

              %li
                .dropdown.login-menu 
                  %button#dropdownMenu1.btn.btn-default.login-btn.dropdown-toggle{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
                    Menu
                  %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1"}
                    %li
                      = link_to "/" do
                        / = icon_tag"home", ["icon-with-text"])
                        = t("header.home")
                    %li
                      = link_to about_infos_path do
                        / = icon_tag"information", ["icon-with-text"])
                        = t("header.about")
                    %li
                      = link_to new_user_feedback_path do
                        / = icon_tag"feedback", ["icon-with-text"])
                        = t("header.contact_us")
                    / %li
                    /   - with_invite_link do
                    /     = link_to new_invitation_path do
                    /       / = icon_tag"invite", ["icon-with-text"])
                    /       = t("header.invite")
                    %li
                      - Maybe(@current_community).menu_links.each do |menu_links|
                        - menu_links.each do |menu_link|
                          = link_to menu_link.url(I18n.locale), :target => "_blank" do
                            / = icon_tag"redirect", ["icon-with-text"])
                            = menu_link.title(I18n.locale)
                    %li
                      - if @current_user && @current_community && @current_user.has_admin_rights?
                        = link_to edit_details_admin_community_path(@current_community) do
                          / = icon_tag"admin", ["icon-with-text"])
                          = t("layouts.logged_in.admin")
              - Maybe(@current_user).each do |user|
                %li
                  = link_to person_path(user, :show_closed => true) do
                    %button.btn.btn-md.pull-right.menu_btn_amzonLyout{:type => "button"}
                      Manage Listings                      
              
                %li{:style => "margin-right: 20px;"}
                  = link_to new_listing_path do
                    %button.btn.btn-md.pull-right.menu_btn_amzonLyout{:type => "button"}
                      Post a new listing



.container
  .banner
    .row
      .col-md-6.col-sm-6.col-xs-12.slider
        #carousel-example-generic.carousel.slide{"data-ride" => "carousel"}
          / Indicators
          %ol.carousel-indicators
            %li.active{"data-slide-to" => "0", "data-target" => "#carousel-example-generic"}
            %li{"data-slide-to" => "1", "data-target" => "#carousel-example-generic"}
            %li{"data-slide-to" => "2", "data-target" => "#carousel-example-generic"}
          / Wrapper for slides
          .carousel-inner{:role => "listbox"}
            -if @first_slider_images.present?
              -@first_slider_images.each_with_index do |image , i|
                -if i == 0
                  .item.active
                    %img.img-responsive{:alt => "...", :src => asset_path(image.image.url(:original))}
                -else  
                  .item
                    %img.img-responsive{:alt => "...", :src => asset_path(image.image.url(:original))}
            -else
              .item.active
                %img.img-responsive{:alt => "...", :src => asset_path('index/No_image_available.png')}
              .item
                %img.img-responsive{:alt => "...", :src => asset_path('index/No_image_available.png')}
          / Controls
          %a.left.carousel-control{"data-slide" => "prev", :href => "#carousel-example-generic", :role => "button"}
            %span.glyphicon.glyphicon-chevron-left{"aria-hidden" => "true"}
            %span.sr-only Previous
          %a.right.carousel-control{"data-slide" => "next", :href => "#carousel-example-generic", :role => "button"}
            %span.glyphicon.glyphicon-chevron-right{"aria-hidden" => "true"}
            %span.sr-only Next
      .col-md-6.col-sm-6.col-xs-12.slider
        #carousel-example-generic1.carousel.slide{"data-ride" => "carousel"}
          / Indicators
          %ol.carousel-indicators
            %li.active{"data-slide-to" => "0", "data-target" => "#carousel-example-generic1"}
            %li{"data-slide-to" => "1", "data-target" => "#carousel-example-generic1"}
            %li{"data-slide-to" => "2", "data-target" => "#carousel-example-generic1"}
          / Wrapper for slides
          .carousel-inner{:role => "listbox"}
            -if @second_slider_images.present?
              -@second_slider_images.each_with_index do |image , i|
                -if i == 0
                  .item.active
                    %img.img-responsive{:alt => "...", :src => asset_path(image.image.url(:original))}
                -else  
                  .item
                    %img.img-responsive{:alt => "...", :src => asset_path(image.image.url(:original))}
            -if !@second_slider_images.present?
              .item.active
                %img.img-responsive{:alt => "...", :src => asset_path('index/No_image_available.png')}
              .item
                %img.img-responsive{:alt => "...", :src => asset_path('index/No_image_available.png')}
          / Controls
          %a.left.carousel-control{"data-slide" => "prev", :href => "#carousel-example-generic1", :role => "button"}
            %span.glyphicon.glyphicon-chevron-left{"aria-hidden" => "true"}
            %span.sr-only Previous
          %a.right.carousel-control{"data-slide" => "next", :href => "#carousel-example-generic1", :role => "button"}
            %span.glyphicon.glyphicon-chevron-right{"aria-hidden" => "true"}
            %span.sr-only Next
  / Products
  .container.featured-area
    .col-md-12
      .row
        %h2 Today's Featured Collections
        - @listings.try(:each) do |listing|
          -if is_featured(listing.id)
            - list = get_image_url(listing)
            .col-md-6.col-sm-12.col-xs-12
              .col-md-12.col-sm-12.col-xs-12
                .row
                  .col-md-9.col-sm-9.col-xs-9.padding-0
                    %a{:href => listing_path(set_path(listing.id))}
                      %img.img-responsive.img-featured{:alt => "", :src => list.first}/
                  .col-md-3.col-sm-3.col-xs-3.padding-0
                    %ul.featured-list
                      - if list.second
                        %li
                          %a{:href => listing_path(set_path(listing.id)) }
                            %img.img-responsive{:alt => "", :src => list.second}/
                      -if list.third
                        %li
                          %a{:href => listing_path(set_path(listing.id))}
                            %img.img-responsive{:alt => "", :src => list.third}/
                      - if list.fourth
                        %li
                          %a{:href => listing_path(set_path(listing.id))}
                            %img.img-responsive{:alt => "", :src => list.fourth}/    
              .col-md-12.col-sm-12.col-xs-12
                .row
                  .padding-left-0.col-md-9.col-sm-9.col-xs-9
                    %a.title{:href => listing_path(set_path(listing.id)) } #{listing.title}
                    .featured-textarea
                      %p #{ listing.description}

                  .padding-right-0.col-md-3.col-sm-3.col-xs-3
                    %ul.details
                      %li 
                        - if listing.author
                          %a{:href => person_path(listing.author.username)} #{listing.author.username}
                      %li US #{listing.price}$
                      %li
                        %a{:href => listing_path(set_path(listing.id)) } Show now
                        
/ - @listings.each do |listing|
/   = render :partial => "layouts/grid_item_listing_image", :locals => {:listing => listing, :modifier_class => ""}
/   = listing.inspect


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




  / %header#header
    /   .header-top
    /     .container
    /       .row
    /         .col-md-12.col-sm-12.col-xs-12
    /           %nav.cart-area.admin-menu-panel
    /             %ul
    /               - if @current_user  
    /                 - conversations = @current_community.conversations.for_person(@current_user)
    /                 - unread_count = MarketplaceService::Inbox::Query.notification_count(@current_user.id, @current_community.id)
    /                 %li
    /                   = link_to person_inbox_path(@current_user) do
    /                     = icon_tag("mail", ["icon-with-text"])
    /                     - if unread_count > 0
    /                       .mobile-badge{:class => get_badge_class(unread_count)}
    /                         = unread_count
    /                 %li{:style => "margin-right: 262px;"}
    /                   .dropdown.login-admin-profile
    /                     %button#dropdownMenu1.btn.btn-default.login-btn.dropdown-toggle{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
    /                       %img.va_h_image{:alt => "", :src => "http://www.free-icons-download.net/images/user-icon-27998.png", :style => "width: 20px;height: 20px;"} 
    /                       %span.admin-text
    /                         = "Ali Ahmad Saleem"
    /                         /= @current_user.name(@current_community)
    /                         %i.icon-caret-down.icon-dropdown
    /                     %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1"}
    /                       - if @current_user
    /                         - Maybe(@current_user).each do |user|
    /                           - conversations = @current_community.conversations.for_person(user)
    /                           - unread_count = MarketplaceService::Inbox::Query.notification_count(user.id, @current_community.id)
    /                           %li
    /                             = link_to person_inbox_path(@current_user) do
    /                               = icon_tag("mail", ["icon-with-text"])
    /                               = t("layouts.conversations.messages")
    /                               - if unread_count > 0
    /                                 .mobile-badge{:class => get_badge_class(unread_count)}
    /                                 = unread_count
    /                           %li
    /                             = link_to person_path(user) do
    /                               = icon_tag("user", ["icon-with-text"])
    /                               = t("header.profile")                        
    /                           %li
    /                             = link_to person_settings_path(user) do
    /                               = icon_tag("settings", ["icon-with-text"])
    /                               = t("layouts.logged_in.settings")
    /                           / %li
    /                           /   = link_to logout_path do
    /                           /     = icon_tag("logout", ["icon-with-text"])
    /                           /     = t("layouts.logged_in.logout")

    /               %li
    /                 .dropdown.login-menu 
    /                   %button#dropdownMenu1.btn.btn-default.login-btn.dropdown-toggle{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
    /                     Menu
    /                   %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1"}
    /                     %li
    /                       = link_to "/" do
    /                         = icon_tag("home", ["icon-with-text"])
    /                         = t("header.home")
    /                     %li
    /                       = link_to about_infos_path do
    /                         = icon_tag("information", ["icon-with-text"])
    /                         = t("header.about")
    /                     %li
    /                       = link_to new_user_feedback_path do
    /                         = icon_tag("feedback", ["icon-with-text"])
    /                         = t("header.contact_us")
    /                     %li
    /                       - with_invite_link do
    /                         = link_to new_invitation_path do
    /                           = icon_tag("invite", ["icon-with-text"])
    /                           = t("header.invite")
    /                     %li
    /                       - Maybe(@current_community).menu_links.each do |menu_links|
    /                         - menu_links.each do |menu_link|
    /                           = link_to menu_link.url(I18n.locale), :target => "_blank" do
    /                             = icon_tag("redirect", ["icon-with-text"])
    /                             = menu_link.title(I18n.locale)
    /                     %li
    /                       - if @current_user && @current_community && @current_user.has_admin_rights?
    /                         = link_to edit_details_admin_community_path(@current_community) do
    /                           = icon_tag("admin", ["icon-with-text"])
    /                           = t("layouts.logged_in.admin")
    /               - Maybe(@current_user).each do |user|
    /                 %li
    /                   = link_to person_path(user, :show_closed => true) do
    /                     %button.btn.btn-md.pull-right.menu_btn_amzonLyout{:type => "button"}
    /                       Manage Listings                      
                  
    /                 %li{:style => "margin-right: 20px;"}
    /                   / = link_to new_listing_path do
    /                   /   %button.btn.btn-md.pull-right.menu_btn_amzonLyout{:type => "button"}
    /                   /     Post a new listing
                  
    / .container
    /   .header-content
    /     / .col-md-2.col-sm-2.col-xs-12.header-p-5
    /     /   %a.logo{:href => root_path } VendorAdvisor
    /     .col-md-1.col-sm-1.col-xs-1.header-p-5
    /       .dropdown.dorpdown-shop
    /         %button#dropdownMenu1.btn.btn-default.dropdown-toggle.btn-shop{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
    /           Shop by category
    /           %span.caret
    /         %ul.dropdown-menu.row{"aria-labelledby" => "dropdownMenu1"}
    /           -@main_categories.each do |category|
    /             %li.col-md-4.col-sm-4.col-xs-4
    /               %a{:href => "#"} #{category.display_name(I18n.locale)}
    /               -sub_categories = @categories.select { |c| c.parent_id == category.id }
    /               -if sub_categories
    /                 %ul.dropdown-child
    /                   -sub_categories.each do |sub_category|
    /                     %li
    /                       %a{:href => "#"} #{sub_category.display_name(I18n.locale)}
    /     .col-md-10.col-sm-10.col-xs-10.header-p-5
    /       %form.form-inline.search-form.search-result{:action => "#{homepage_index_path}" , :method => "get"}
    /         .input-group.col-sm-10
    /           %input.form-control{:name => "q", :placeholder => "Search", :type => "text", :value => ""}
    /             .input-group-btn.select-drop-head
    /               .search-form-input.categorices-select.btn.btn-default.dropdown-toggle 
    /                 %span.caret.caret-icon
    /                 = select_tag(:category,  options_from_collection_for_select(@main_categories, :url,:url) , class: 'categor-dropdown' , include_blank: "All Categories") 
    /               / /btn-group
    /         %button.input-group.btn.btn-primary.col-sm-2{:type => "submit"} Search
    /     .col-md-1.col-sm-1.col-xs-1.header-p-0
    /       %a.advanced{:href => "#"} Advanced
    /   .navarea
    /     %nav.navbar.navbar-default.row
    /       .container-fluid
    /         / Brand and toggle get grouped for better mobile display
    /         .navbar-header.row
    /           %button.navbar-toggle.collapsed{"aria-expanded" => "false", "data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", :type => "button"}
    /             %span.sr-only Toggle navigation
    /             %span.icon-bar
    /             %span.icon-bar
    /             %span.icon-bar
    /         / Collect the nav links, forms, and other content for toggling
    /         #bs-example-navbar-collapse-1.collapse.navbar-collapse
    /           %ul.nav.navbar-nav
    /             %li
    /               %a{:href => "#"} Guest Supplies
    /             %li
    /               %a{:href => "#"} Restaurant Equipment
    /             %li
    /               %a{:href => "#"} FF&E
    /             %li
    /               %a{:href => "#"} Cleaning Supplies
    /             %li
    /               %a{:href => "#"} Building Materials
    /             %li
    /               %a{:href => "#"} Collectibles & Art
    /             %li
    /               %a{:href => "#"} Home & Garden
    /             %li
    /               %a{:href => "#"} Sporting Goods

    /         / /.navbar-collapse
    /       / /.container-fluid
    /     / Banner
  
    / = yield

/////////////////////////////////////////////////////////people#show///////////////////////////////////////

- content_for :javascript do
  initialize_profile_view("#{@person.username}");

- content_for :title_header do
  %h1
    %span.profile-title= PersonViewUtils.person_display_name(@person, @current_community)

.rating-details
  .col-md-12.col-sm-12.col-xs-12
    .row
      .col-md-2.col-sm-2.col-xs-2
        .people-image-mobile
          = huge_avatar_thumb(@person)
        .profile-action-buttons-mobile
          -if current_user?(@person)
            %a.profile-edit-link{href: person_settings_path(@person)}
              .content
                = t("people.show.edit_profile_info")
      .col-md-10.col-sm-10.col-xs-10.padding-left-0
        .follow-taxtarea
          .follow-head.row
            .col-md-9.col-sm-9.col-xs-9
              %a.title{:href => "#"} #{@person}
              ( #{listings.count} )
              %span.feed-back-text
                
            .col-md-3.col-sm-3.col-xs-3.pull-right.text-right
              -if !current_user?(@person)
                %a.fa.fa-envelope-o{:href => new_person_person_message_path(@person)}
                %a{:href => new_person_person_message_path(@person)}
                  %span Contact me
          .row
            .col-md-4.col-sm-4.col-xs-4      
              - if @current_community.follow_in_use? && @current_user && !current_user?(@person)
                - if @current_user.follows?(@person)
                  = link_to person_follower_path(@person, @current_user), :method => "delete", :remote => true, :id => "followButton" , :class => "following_button" do
                    %button.btn-follow{:type => "button"} 
                      Following
                - else
                  = link_to [ @person, :followers ], :method => "post", :remote => true, :id => "followButton" , :class => "follow_button" do
                    %button.btn-follow{:type => "button"} 
                      %i.fa.fa-plus
                        Follow
            .col-md-8.col-sm-8.col-xs-8.follow_caption
              - if @person.description && !@person.description.blank?
                - text_with_line_breaks do
                  = @person.description
              - elsif current_user?(@person)
                %a{href: person_settings_path(@person)}
                  .icon-with-text-container
                    .ss-chat.icon-part
                    .ss.text-part= t(".add_description")
                          
  .col-md-12.col-sm-12.col-xs-12.see-all-feeback-block
    .row
      .col-md-6.col-sm-6.col-xs-6
        %h3
          Feedback ratings
      .col-md-6.col-sm-6.col-xs-6.pull-right.text-right
        %h3
          %a{:href => "#"} see all feeback
/ =======
/       %h2.people-header
/         - if listings.total_entries > 0
/           - if current_user?(@person) && params[:show_closed]
/             = pluralize(listings.total_entries, t(".listing"), t(".listings"))
/           - else
/             = pluralize(listings.total_entries, t(".open_listing"), t(".open_listings"))
/         - else
/           - if current_user?(@person) && params[:show_closed]
/             = t(".no_listings")
/           - else
/             = t(".no_open_listings")
/         %span.people-show-closed-link
/           - if current_user?(@person)
/             - if params[:show_closed]
/               = link_to t("people.profile_listings.show_only_open"), person_path(@person)
/             - else
/               = link_to t("people.profile_listings.show_also_closed"), person_path(@person, :show_closed => true)

/     #profile-listings-list
/       - limit = 6
/       = render :partial => 'listings/profile_listings', :locals => {person: @person, limit: limit, listings: listings}

/     - if @current_community.follow_in_use?
/       = render :partial => "followed_people", :locals => { person: @person, followed_people: followed_people, limit: 6 }

/     #people-testimonials.listing-main
/       .row
/         %h2.people-header
/           - if received_testimonials.size > 0
/             = pluralize(received_testimonials.size, t(".review"), t(".reviews"))
/             = "(#{feedback_positive_percentage.to_s}% #{t("people.show.positive")}, #{received_positive_testimonials.size}/#{received_testimonials.size})"
/           - else
/             = t(".no_reviews")
/         - if received_testimonials.size > 0
/           #profile-testimonials-list
/             = render :partial => "testimonials", :locals => {:received_testimonials => received_testimonials, :limit => 3}

/   .col-4
/ >>>>>>> c88dd8996af7e2a1f41b6194e9e289cf4aba0020
    .row
      .col-md-4.col-sm-4.col-xs-4.feedback-border-right
       
        %ul.ratinglist-detail.row
          %li
            .col-md-4.col-sm-4.col-xs-4
              %span#rateYo
            .col-md-3.col-sm-3.col-xs-3
              %strong
                #{received_testimonials.size}
            .col-md-5.col-sm-5.col-xs-5
              %span
                Item as described
      .col-md-4.col-sm-4.col-xs-4.feedbak-result.feedback-border-right                                                 
        .col-md-4.col-sm-4.col-xs-4
          %p
            %span
              %i.fa.fa-plus-circle
            %strong
              #{received_positive_testimonials.size}
          %p
            Positive
        .col-md-4.col-sm-4.col-xs-4
          %p
            %span
              %i.icon-circle-blank{:style => "font-size:18px"}
            %strong
              #{received_neutral_testimonials.size}
          %p
            Neutral
        .col-md-4.col-sm-4.col-xs-4
          %p
            %span
              %i.fa.fa-minus-circle
            %strong
              #{received_negative_testimonials.size}
          %p
            Negative
      .col-md-4.col-sm-4.col-xs-4
        #rating-carousel
          -received_testimonials.each do |testimonial| 
            - listing = testimonial.tx.listing
            .item
              .row
                .col-md-4.col-sm-4.col-xs-4
                  = small_avatar_thumb(testimonial.author)
                  -if testimonial.grade <= 0.25
                    %i.fa.fa-star-o{"aria-hidden" => "true"}
                    %i.fa.fa-star-o{"aria-hidden" => "true"}
                    %i.fa.fa-star-o{"aria-hidden" => "true"}                    
                  -elsif testimonial.grade == 0.5
                    %i.fa.fa-star{"aria-hidden" => "true"}
                    %i.fa.fa-star-half-o{"aria-hidden" => "true"}
                    %i.fa.fa-star-o{"aria-hidden" => "true"}                    
                  -elsif testimonial.grade >= 0.5
                    %i.fa.fa-star{"aria-hidden" => "true"} 
                    %i.fa.fa-star{"aria-hidden" => "true"} 
                    %i.fa.fa-star{"aria-hidden" => "true"}
                .col-md-8.col-sm-8.col-xs-8
                  .item-caption
                    - text_with_line_breaks do
                      #{testimonial.text} 
                  %span        
                    .testimonial-author
                      = link_to_unless testimonial.author.deleted?, PersonViewUtils.person_display_name(testimonial.author, @current_community), testimonial.author
                      = t("testimonials.testimonial.about_listing")
                      = link_to listing.title, listing
                  %span    
                    = time_ago(testimonial.created_at) + "."
                / .testimonial-icon{:class => testimonial.grade > 0.25 ? 'positive' : 'negative'}
                /   - if testimonial.grade > 0.25
                /     = icon_tag("like", ["positive"])
                /   - else
                /     = icon_tag("dislike", ["negative"])
              

 
.container.collections-slider
  %h1
    Collections by #{@person.username} (#{listings.count})
  #collections-carousel
    -if listings.count > 0
      -listings.each do |listing|
        .item 
          .collections-items
            .collections-items-head
              %a.items-title{:href => listing_path(set_path(listing.id))} #{listing.title}          
            .colletions-img-slider
              %a.items-title{:href => listing_path(set_path(listing.id))}
                = image_tag listing_image_url(listing,0), {:alt => listed_listing_title(listing), :class => "img-responsive img-slider"}
            %ul.collections-img-list 
              %li
                %a.items-title{:href => listing_path(set_path(listing.id))}
                  = image_tag listing_image_url(listing,1), {:alt => listed_listing_title(listing), :class => "img-responsive"}
              %li
                %a.items-title{:href => listing_path(set_path(listing.id))}
                  = image_tag listing_image_url(listing,2), {:alt => listed_listing_title(listing), :class => "img-responsive"}
              %li
                %a.items-title{:href => listing_path(set_path(listing.id))}
                  = image_tag listing_image_url(listing,3), {:alt => listed_listing_title(listing), :class => "img-responsive"}
            %p USD$ #{listing.price}

.container.following-collections
  %h2
    Following
  %label.following-members Members
  %ul.following-members-list
    %li.row
      .col-md-3.col-sm-3.col-xs-3
        
      .col-md-9.col-sm-9.col-xs-9
        %a.following-members{:href => "#"} Members
        %span #{listings.count} collections.
        %span #{@person.followers.count} followers

  %ul.following-images-list
    -@person.followers.each do |person|
      %li.padding-0.col-md-1.col-sm-1.col-xs-1
        = link_to person  do
          = large_avatar_thumb(person, :class => "img-responsive")
          = person.full_name
        .following-user-details
          %p #{person.listings.count} &nbsp&nbspListings
          %p #{person.followers.count} Followers

  %ul.following-images-list
    - grade = 0 
    -if received_testimonials.size > 0
      -received_testimonials.each do |r_t|
        -grade = grade + r_t.grade
      - grade = ( grade / received_testimonials.size ) * 5 


- content_for :extra_javascript do
  :javascript
    window.ST.initializeFollowButtons();


%link{:href => "https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.1.1/jquery.rateyo.min.css", :rel => "stylesheet"}
%script{:src => "https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.1.1/jquery.rateyo.min.js"}
:javascript
  $(function () {
    $("#rateYo").rateYo({
      rating: #{grade},
      readOnly: true,
      starWidth: "20px",
      multiColor: {
      "startColor": "#ffffe6", //RED
      "endColor"  : "#ffff00"  //GREEN
    }

    });
  });
  $(document).ready(function () {
    $("#rating-carousel").owlCarousel({

      autoPlay: 3000, //Set AutoPlay to 3 seconds
      dots: true,
      items: 1,
      itemsDesktop: [1199, 3],
      itemsDesktopSmall: [979, 3]
    });
     $("#collections-carousel").owlCarousel({

      autoPlay: 3000, //Set AutoPlay to 3 seconds
      dots: true,
      items: 4                                                                                          ,
      itemsDesktop: [1199, 3],
      itemsDesktopSmall: [979, 3]
    });
  });
  $(document).ready(function(){
   var a = parseInt( #{received_positive_testimonials.size} )
   var b = parseInt( #{received_testimonials.size} )
   if( a == 0 ){
      $(".feed-back-text").text("0.0% positive feedback")
   }else{
      var c = parseFloat(( a / b ) * 100).toFixed(2)
      $(".feed-back-text").text(c+"% positive feedback")
   }
   $(function() { 
      $("#followButton").on('ajax:error', function(xhr, status, error) { console.log("success"); location.reload(true); }); 
      $("#followButton").on('ajax:success', function(event, data, status, xhr) { console.log("error"); location.reload(true); }); 
    });
  });






























/ - content_for :javascript do
/   initialize_profile_view("#{@person.username}");

/ - content_for :title_header do
/   %h1
/     %span.profile-title= @person.name(@current_community) + (@community_customization && @community_customization.storefront_label ? @community_customization.storefront_label : "")

/ .row
/   .col-8

/     .row.relative
/       .people-image-mobile
/         = huge_avatar_thumb(@person)
/       .profile-action-buttons-mobile
/         = render :partial => "profile_action_buttons"

/     .row
/       - if @person.description && !@person.description.blank?
/         - text_with_line_breaks do
/           = @person.description
/       - elsif current_user?(@person)
/         %a{href: person_settings_path(@person)}
/           .icon-with-text-container
/             .ss-chat.icon-part
/             .ss.text-part= t(".add_description")

/     .row
/       %h2.people-header
/         - if listings.total_entries > 0
/           - if current_user?(@person) && params[:show_closed]
/             = pluralize(listings.total_entries, t(".listing"), t(".listings"))
/           - else
/             = pluralize(listings.total_entries, t(".open_listing"), t(".open_listings"))
/         - else
/           - if current_user?(@person) && params[:show_closed]
/             = t(".no_listings")
/           - else
/             = t(".no_open_listings")
/         %span.people-show-closed-link
/           - if current_user?(@person)
/             - if params[:show_closed]
/               = link_to t("people.profile_listings.show_only_open"), person_path(@person)
/             - else
/               = link_to t("people.profile_listings.show_also_closed"), person_path(@person, :show_closed => true)

/     #profile-listings-list
/       - limit = 6
/       = render :partial => 'listings/profile_listings', :locals => {person: @person, limit: limit, listings: listings}

/     - if @current_community.follow_in_use?
/       = render :partial => "followed_people", :locals => { person: @person, followed_people: followed_people, limit: 6 }

/     - if @current_community.testimonials_in_use
/       #people-testimonials.listing-main
/         .row
/           %h2.people-header
/             - if received_testimonials.size > 0
/               = pluralize(received_testimonials.size, t(".review"), t(".reviews"))
/               = "(#{feedback_positive_percentage.to_s}% #{t("people.show.positive")}, #{received_positive_testimonials.size}/#{received_testimonials.size})"
/             - else
/               = t(".no_reviews")
/           - if received_testimonials.size > 0
/             #profile-testimonials-list
/               = render :partial => "testimonials", :locals => {:received_testimonials => received_testimonials, :limit => 3}

/   .col-4
/     .row
/       .people-image
/         = huge_avatar_thumb(@person)

/     .row
/       .profile-action-buttons-desktop
/         = render :partial => "profile_action_buttons"

/ - content_for :extra_javascript do
/   :javascript
/     window.ST.initializeFollowButtons();